apiVersion: v1
kind: Namespace
metadata:
  name: product

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: product
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      name: web
      labels:
        app: web
    spec:
      initContainers:
      - name: gen-idx
        image: busybox:1.31.0
        command: ['sh', '-c', 'wget -O- https://raw.githubusercontent.com/express42/otus-platform-snippets/master/Module-02/Introduction-to-Kubernetes/wget.sh | sh']
        volumeMounts:
        - name: app
          mountPath: /app
      containers:
      - name: otus-les2
        image: neogeowild/otus_les2_webapp
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
        livenessProbe:
          tcpSocket: { port: 8000 }
        volumeMounts:
        - name: app
          mountPath: /app
      volumes:
      - name: app
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: product
spec:
  selector:
    app: web
  type: ClusterIP
  clusterIP: None
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: web
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  namespace: product
spec:
  rules:
  - host: my.example.com
    http:
      paths:
      - path: /web
        backend:
          serviceName: web-svc
          servicePort: 8000
