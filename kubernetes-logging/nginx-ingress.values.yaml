controller:
    replicaCount: 3
  
    config:
        log-format-escape-json: "true"
        log-format-upstream: '{"time": "$time_iso8601", "http_user_agent": "$http_user_agent", "remote_addr": "$proxy_protocol_addr", "x-forward-for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
  "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status":$status, "vhost": "$host", "request_proto": "$server_protocol",
  "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer"}'

    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
            additionalLabels:
            prometheus: default
            namespace: "nginx-ingress"
            namespaceSelector: 
                any: true
            scrapeInterval: 30s

    tolerations:
      - key: node-role
        operator: Equal
        value: pool-1
        effect: NoSchedule
  
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx-ingress
            topologyKey: kubernetes.io/hostname
  
    nodeSelector: 
      cloud.google.com/gke-nodepool: pool-1